// 4.22.1 0xda9a997e
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_anglelimit_activated[]; // BITMAP_ANGLELIMIT_ACTIVATED_ID = 0, Size: 46x35 pixels
extern const unsigned char image_anglelimit_normal[]; // BITMAP_ANGLELIMIT_NORMAL_ID = 1, Size: 45x35 pixels
extern const unsigned char image_atb_activated[]; // BITMAP_ATB_ACTIVATED_ID = 2, Size: 61x32 pixels
extern const unsigned char image_atb_normal[]; // BITMAP_ATB_NORMAL_ID = 3, Size: 59x30 pixels
extern const unsigned char image_bypass_activated[]; // BITMAP_BYPASS_ACTIVATED_ID = 4, Size: 103x39 pixels
extern const unsigned char image_bypass_normal[]; // BITMAP_BYPASS_NORMAL_ID = 5, Size: 100x36 pixels
extern const unsigned char image_ol_activated[]; // BITMAP_OL_ACTIVATED_ID = 6, Size: 35x28 pixels
extern const unsigned char image_ol_not_activate[]; // BITMAP_OL_NOT_ACTIVATE_ID = 7, Size: 36x27 pixels
extern const unsigned char image_workingscreen[]; // BITMAP_WORKINGSCREEN_ID = 8, Size: 651x369 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_anglelimit_activated, 0, 46, 35, 0, 0, 46, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 35, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_anglelimit_normal, 0, 45, 35, 0, 0, 45, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 35, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_atb_activated, 0, 61, 32, 0, 0, 61, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 32, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_atb_normal, 0, 59, 30, 0, 0, 59, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 30, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_bypass_activated, 0, 103, 39, 0, 0, 103, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 39, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_bypass_normal, 0, 100, 36, 0, 0, 100, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 36, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_ol_activated, 0, 35, 28, 0, 0, 35, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 28, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_ol_not_activate, 0, 36, 27, 0, 0, 36, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 27, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_workingscreen, 0, 651, 369, 0, 0, 651, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 369, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
