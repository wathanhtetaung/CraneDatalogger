/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextAreaWithOneWildcard RadiusValue;
    touchgfx::TextAreaWithOneWildcard AngleValue;
    touchgfx::TextAreaWithOneWildcard SWLValue;
    touchgfx::TextAreaWithOneWildcard LoadValue;
    touchgfx::TextAreaWithOneWildcard textArea2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t RADIUSVALUE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar RadiusValueBuffer[RADIUSVALUE_SIZE];
    static const uint16_t ANGLEVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar AngleValueBuffer[ANGLEVALUE_SIZE];
    static const uint16_t SWLVALUE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar SWLValueBuffer[SWLVALUE_SIZE];
    static const uint16_t LOADVALUE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar LoadValueBuffer[LOADVALUE_SIZE];
    static const uint16_t TEXTAREA2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];

private:

};

#endif // SCREEN1VIEWBASE_HPP
