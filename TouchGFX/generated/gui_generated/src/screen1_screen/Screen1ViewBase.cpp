/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Screen1ViewBase::Screen1ViewBase()
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    angle_text.setXY(70, 52);
    angle_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    angle_text.setLinespacing(0);
    Unicode::snprintf(angle_textBuffer, ANGLE_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PYB).getText());
    angle_text.setWildcard(angle_textBuffer);
    angle_text.resizeToCurrentText();
    angle_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R07P));
    add(angle_text);

    angle_value.setXY(212, 52);
    angle_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    angle_value.setLinespacing(0);
    angle_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HSQA));
    angle_value.setVisible(false);
    add(angle_value);

    Radius_text.setXY(70, 97);
    Radius_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Radius_text.setLinespacing(0);
    Unicode::snprintf(Radius_textBuffer, RADIUS_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GUNP).getText());
    Radius_text.setWildcard(Radius_textBuffer);
    Radius_text.resizeToCurrentText();
    Radius_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ULBN));
    add(Radius_text);

    Radius_value.setXY(212, 97);
    Radius_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Radius_value.setLinespacing(0);
    Radius_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YXE5));
    Radius_value.setVisible(false);
    add(Radius_value);

    load_text.setXY(70, 147);
    load_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    load_text.setLinespacing(0);
    Unicode::snprintf(load_textBuffer, LOAD_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NFHR).getText());
    load_text.setWildcard(load_textBuffer);
    load_text.resizeToCurrentText();
    load_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q4C2));
    add(load_text);

    load_value.setXY(212, 147);
    load_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    load_value.setLinespacing(0);
    load_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UX70));
    load_value.setVisible(false);
    add(load_value);

    SWL_text.setXY(70, 198);
    SWL_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWL_text.setLinespacing(0);
    Unicode::snprintf(SWL_textBuffer, SWL_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OMG4).getText());
    SWL_text.setWildcard(SWL_textBuffer);
    SWL_text.resizeToCurrentText();
    SWL_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W3HT));
    add(SWL_text);

    SWL_value.setXY(212, 198);
    SWL_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWL_value.setLinespacing(0);
    SWL_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4839));
    SWL_value.setVisible(false);
    add(SWL_value);

    AngleValue.setXY(185, 39);
    AngleValue.setProgressIndicatorPosition(12, 10, 150, 30);
    AngleValue.setRange(0, 100);
    AngleValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AngleValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A93M));
    AngleValue.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUNDED_LIGHT_ID));
    AngleValue.setValue(60);
    AngleValue.setVisible(false);
    add(AngleValue);

    RadiusValue.setXY(185, 84);
    RadiusValue.setProgressIndicatorPosition(12, 10, 150, 30);
    RadiusValue.setRange(0, 100);
    RadiusValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RadiusValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_835F));
    RadiusValue.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUNDED_LIGHT_ID));
    RadiusValue.setValue(60);
    RadiusValue.setVisible(false);
    add(RadiusValue);

    LoadValue.setXY(185, 134);
    LoadValue.setProgressIndicatorPosition(12, 10, 150, 30);
    LoadValue.setRange(0, 100);
    LoadValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LoadValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NABQ));
    LoadValue.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUNDED_LIGHT_ID));
    LoadValue.setValue(60);
    LoadValue.setVisible(false);
    add(LoadValue);

    SWLValue.setXY(185, 185);
    SWLValue.setProgressIndicatorPosition(12, 10, 150, 30);
    SWLValue.setRange(0, 100);
    SWLValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SWLValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S2QL));
    SWLValue.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUNDED_LIGHT_ID));
    SWLValue.setValue(60);
    SWLValue.setVisible(false);
    add(SWLValue);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}
